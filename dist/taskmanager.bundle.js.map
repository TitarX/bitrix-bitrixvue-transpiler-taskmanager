{"version":3,"file":"taskmanager.bundle.js","sources":["../src/component/item.js","../src/component/task-manager.js","../src/application.js"],"sourcesContent":["import \"./item.css\";\n\nexport const Item =\n{\n    props:\n    {\n        position: { default: 0 },\n        text: { default: '' },\n    },\n\n    // language=Vue\n    template: `<div class=\"taskmanager-list-item\">{{position}}. {{text}}</div>`\n};\n","import { Item } from './item';\nimport \"./task-manager.css\";\n\nexport const TaskManger =\n{\n    components:\n    {\n        Item\n    },\n\n    data(): object {\n        return {\n            list: []\n        }\n    },\n\n    methods:\n    {\n        addNew(): void {\n            const result = prompt(this.$Bitrix.Loc.getMessage('TASK_MANAGER_QUESTION'));\n            this.list.push(result);\n        },\n\n        close(): void {\n            this.$Bitrix.Application.get().detachTemplate();\n        },\n    },\n\n    // language=Vue\n    template: `\n        <div class=\"taskmanager-list\">\n            <div class=\"taskmanager-list-title\">{{$Bitrix.Loc.getMessage('TASK_MANAGER_TODAY_TITLE')}}</div>\n            <template v-for=\"(value, index) in list\" :key=\"index\">\n                <Item :position=\"index+1\" :text=\"value\"/>\n            </template>\n            <template v-if=\"list.length <= 0\">\n                  <div class=\"taskmanager-list-empty\">{{$Bitrix.Loc.getMessage('TASK_MANAGER_LIST_EMPTY')}}</div>\n            </template>\n            <div class=\"taskmanager-list-buttons\">\n                <button @click=\"addNew\">{{$Bitrix.Loc.getMessage('TASK_MANAGER_ADD')}}</button>\n                <button @click=\"close\">{{$Bitrix.Loc.getMessage('TASK_MANAGER_CLOSE')}}</button>\n            </div>\n        </div>\n    `\n};\n","/**\n * TaskManger Application\n *\n * @package demo\n * @subpackage local\n * @copyright 2001-2022 Bitrix\n */\n\nimport { BitrixVue } from 'ui.vue3';\nimport { Dom, Loc } from 'main.core';\n\nimport { TaskManger } from './component/task-manager';\n\nexport class TaskManager {\n    #application;\n\n    constructor(rootNode): void {\n        this.rootNode = document.querySelector(rootNode);\n    }\n\n    start(): void {\n        const button = Dom.create('button', {\n            text: Loc.getMessage('TASK_MANAGER_OPEN'),\n            events: {\n                click: () => this.attachTemplate()\n            },\n        });\n        Dom.append(button, this.rootNode);\n\n        const taskTryText = Loc.getMessage('TASK_TRY');\n        const buttonTry = Dom.create('button', {\n            text: taskTryText,\n            events: {\n                click: () => console.log(taskTryText)\n            }\n        });\n        Dom.append(buttonTry, this.rootNode);\n    }\n\n    attachTemplate(): void {\n        const context = this;\n\n        this.#application = BitrixVue.createApp({\n            name: 'TaskManager',\n            components: {\n                TaskManger\n            },\n            beforeCreate(): void {\n                this.$bitrix.Application.set(context);\n            },\n            template: '<TaskManger/>'\n        });\n        this.#application.mount(this.rootNode)\n    }\n\n    detachTemplate(): void {\n        if (this.#application) {\n            this.#application.unmount();\n        }\n\n        this.start();\n    }\n}\n"],"names":["Item","props","position","text","template","TaskManger","components","data","list","methods","addNew","result","prompt","$Bitrix","Loc","getMessage","push","close","Application","get","detachTemplate","TaskManager","rootNode","document","querySelector","button","Dom","create","events","click","attachTemplate","append","taskTryText","buttonTry","console","log","context","BitrixVue","createApp","name","beforeCreate","$bitrix","set","mount","unmount","start"],"mappings":";;;IAEO,IAAMA,IAAI,GACjB;MACIC,KAAK,EACL;QACIC,QAAQ,EAAE;UAAE,WAAS;SADzB;QAEIC,IAAI,EAAE;UAAE,WAAS;;OAJzB;;MAQIC,QAAQ;IARZ,CADO;;ICCA,IAAMC,UAAU,GACvB;MACIC,UAAU,EACV;QACIN,IAAI,EAAJA;OAHR;MAMIO,IANJ,kBAMmB;QACX,OAAO;UACHC,IAAI,EAAE;SADV;OAPR;MAYIC,OAAO,EACP;QACIC,MADJ,oBACmB;UACX,IAAMC,MAAM,GAAGC,MAAM,CAAC,KAAKC,OAAL,CAAaC,GAAb,CAAiBC,UAAjB,CAA4B,uBAA5B,CAAD,CAArB;UACA,KAAKP,IAAL,CAAUQ,IAAV,CAAeL,MAAf;SAHR;QAMIM,KANJ,mBAMkB;UACV,KAAKJ,OAAL,CAAaK,WAAb,CAAyBC,GAAzB,GAA+BC,cAA/B;;OApBZ;;MAyBIhB,QAAQ;IAzBZ,CADO;;;;;;;;ACUP,QAAaiB,WAAb;MAGI,qBAAYC,QAAZ,EAA4B;QAAA;;QAAA;UAAA;UAAA;;;QACxB,KAAKA,QAAL,GAAgBC,QAAQ,CAACC,aAAT,CAAuBF,QAAvB,CAAhB;;;MAJR;QAAA;QAAA,wBAOkB;UAAA;;UACV,IAAMG,MAAM,GAAGC,aAAG,CAACC,MAAJ,CAAW,QAAX,EAAqB;YAChCxB,IAAI,EAAEW,aAAG,CAACC,UAAJ,CAAe,mBAAf,CAD0B;YAEhCa,MAAM,EAAE;cACJC,KAAK,EAAE;gBAAA,OAAM,KAAI,CAACC,cAAL,EAAN;;;WAHA,CAAf;UAMAJ,aAAG,CAACK,MAAJ,CAAWN,MAAX,EAAmB,KAAKH,QAAxB;UAEA,IAAMU,WAAW,GAAGlB,aAAG,CAACC,UAAJ,CAAe,UAAf,CAApB;UACA,IAAMkB,SAAS,GAAGP,aAAG,CAACC,MAAJ,CAAW,QAAX,EAAqB;YACnCxB,IAAI,EAAE6B,WAD6B;YAEnCJ,MAAM,EAAE;cACJC,KAAK,EAAE;gBAAA,OAAMK,OAAO,CAACC,GAAR,CAAYH,WAAZ,CAAN;;;WAHG,CAAlB;UAMAN,aAAG,CAACK,MAAJ,CAAWE,SAAX,EAAsB,KAAKX,QAA3B;;;QAvBR;QAAA,iCA0B2B;UACnB,IAAMc,OAAO,GAAG,IAAhB;UAEA,sDAAoBC,iBAAS,CAACC,SAAV,CAAoB;YACpCC,IAAI,EAAE,aAD8B;YAEpCjC,UAAU,EAAE;cACRD,UAAU,EAAVA;aAHgC;YAKpCmC,YALoC,0BAKf;cACjB,KAAKC,OAAL,CAAavB,WAAb,CAAyBwB,GAAzB,CAA6BN,OAA7B;aANgC;YAQpChC,QAAQ,EAAE;WARM,CAApB;UAUA,sDAAkBuC,KAAlB,CAAwB,KAAKrB,QAA7B;;;QAvCR;QAAA,iCA0C2B;UACnB,sCAAI,IAAJ,iBAAuB;YACnB,sDAAkBsB,OAAlB;;;UAGJ,KAAKC,KAAL;;;MA/CR;IAAA;;;;;;;;"}